<idea-plugin version="2">
    <id>com.tang</id>
    <name>Lua IDE</name>
    <version>1.0</version>
    <vendor email="love.tangzx@qq.com" url="http://www.yourcompany.com">NULL</vendor>

    <description><![CDATA[
    Just a lua plugin for IDEA
    ]]></description>

    <change-notes><![CDATA[

    ]]>
    </change-notes>

    <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
    <idea-version since-build="131"/>

    <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">
        <moduleType id="LUA_MODULE" implementationClass="com.tang.intellij.lua.project.LuaModuleType"/>
        <moduleConfigurationEditorProvider implementation="com.tang.intellij.lua.project.LuaModuleConfigurationEditorProvider"/>
        <!-- Add your extensions here -->
        <lang.foldingBuilder language="Lua" implementationClass="com.tang.intellij.lua.folding.LuaFoldingBuilder"/>
        <lang.braceMatcher language="Lua" implementationClass="com.tang.intellij.lua.braces.LuaBraceMatcher"/>
        <lang.syntaxHighlighterFactory language="Lua" implementationClass="com.tang.intellij.lua.highlighting.LuaSyntaxHighlighterFactory"/>
        <lang.parserDefinition language="Lua" implementationClass="com.tang.intellij.lua.lang.LuaParserDefinition"/>
        <lang.findUsagesProvider language="Lua" implementationClass="com.tang.intellij.lua.usages.LuaFindUsagesProvider"/>
        <lang.formatter language="Lua" implementationClass="com.tang.intellij.lua.editor.formatter.LuaFormattingModelBuilder"/>
        <lang.documentationProvider language="Lua" implementationClass="com.tang.intellij.lua.documentation.LuaDocumentationProvider"/>
        <lang.psiStructureViewFactory language="Lua" implementationClass="com.tang.intellij.lua.editor.LuaStructureViewFactory"/>
        <lang.commenter language="Lua" implementationClass="com.tang.intellij.lua.editor.LuaCommenter"/>

        <!--rename-->
        <lang.refactoringSupport language="Lua" implementationClass="com.tang.intellij.lua.editor.LuaRefactoringSupportProvider"/>
        <nameSuggestionProvider implementation="com.tang.intellij.lua.editor.LuaNameSuggestionProvider"/>

        <psi.referenceContributor language="Lua" implementation="com.tang.intellij.lua.reference.LuaReferenceContributor"/>
        <gotoClassContributor implementation="com.tang.intellij.lua.editor.LuaClassNavigationContributor"/>
        <gotoSymbolContributor implementation="com.tang.intellij.lua.editor.LuaSymbolNavigationContributor"/>
        <fileTypeFactory implementation="com.tang.intellij.lua.lang.LuaFileTypeFactory"/>
        <completion.contributor language="Lua" implementationClass="com.tang.intellij.lua.editor.completion.LuaCompletionContributor"/>
        <completion.contributor language="Lua" implementationClass="com.tang.intellij.lua.editor.completion.LuaCommentCompletionContributor"/>
        <codeInsight.lineMarkerProvider language="Lua" implementationClass="com.tang.intellij.lua.codeInsight.LuaLineMarkerProvider"/>
        <codeInsight.parameterNameHints language="Lua" implementationClass="com.tang.intellij.lua.codeInsight.LuaParameterHintsProvider"/>
        <enterHandlerDelegate implementation="com.tang.intellij.lua.editor.LuaEnterHandlerDelegate" />
        <annotator language="Lua" implementationClass="com.tang.intellij.lua.annotator.LuaAnnotator" />
        <stubElementTypeHolder class="com.tang.intellij.lua.psi.LuaTypes" />
        <stubElementTypeHolder class="com.tang.intellij.lua.comment.psi.LuaDocTypes"/>
        <stubIndex implementation="com.tang.intellij.lua.stubs.index.LuaGlobalFuncIndex" />
        <stubIndex implementation="com.tang.intellij.lua.stubs.index.LuaClassIndex"/>
        <stubIndex implementation="com.tang.intellij.lua.stubs.index.LuaClassMethodIndex"/>
        <stubIndex implementation="com.tang.intellij.lua.stubs.index.LuaGlobalFieldIndex"/>
        <stubIndex implementation="com.tang.intellij.lua.stubs.index.LuaClassFieldIndex"/>
        <typedHandler implementation="com.tang.intellij.lua.editor.LuaAutoPopupHandler"/>
        <typedHandler implementation="com.tang.intellij.lua.editor.LuaAutoIndentHandler"/>

        <intentionAction>
            <className>com.tang.intellij.lua.codeInsight.intention.CreateParamDocIntentionAction</className>
            <descriptionDirectoryName>Create Parameter Doc</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>com.tang.intellij.lua.codeInsight.intention.CreateTypeDeclarationIntentionAction</className>
            <descriptionDirectoryName>Create Type Declaration</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>com.tang.intellij.lua.codeInsight.intention.CreateReturnDocIntention</className>
            <descriptionDirectoryName>Create Return Declaration</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>com.tang.intellij.lua.codeInsight.intention.CreateDocForMethodIntention</className>
            <descriptionDirectoryName>Create Doc For Method</descriptionDirectoryName>
        </intentionAction>

        <localInspection implementationClass="com.tang.intellij.lua.codeInsight.inspection.DuplicateClassDeclaration"
                         displayName="Duplicate Class"
                         enabledByDefault="true"
                         level="ERROR"
                         groupName="Lua"/>
        <localInspection implementationClass="com.tang.intellij.lua.codeInsight.inspection.LocalAssignCanBeSimpler"
                         displayName="Local Assign can be simpler"
                         enabledByDefault="true"
                         groupName="Lua"/>
    </extensions>

    <application-components>
        <!-- Add your application components here -->
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <actions>
        <!-- Add your actions here -->
    </actions>

</idea-plugin>